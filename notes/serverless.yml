org: tungjj
app: fly-note
service: notes
frameworkVersion: "3"
plugins:
  - serverless-offline
provider:
  name: aws
  stage: dev
  runtime: nodejs20.x
  region: ap-southeast-1
  architecture: x86_64
  httpApi:
    payload: "2.0"
    metrics: true
  tags:
    name: fly-note
  iam:
    role:
      name: FlyNote-FullAccess-DynamoDB
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: arn:aws:dynamodb:ap-east-1:*:*
      managedPolicies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      tags:
        name: fly-note
resources:
  Resources:
    flyNoteDb:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: notesTable
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
          - AttributeName: noteId
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
          - AttributeName: noteId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 3
functions:
  CreateNote:
    handler: createNote.handler
    runtime: nodejs20.x
    architecture: x86_64
    events:
      - httpApi:
          method: POST
          path: /note
  UpdateNote:
    handler: updateNote.handler
    runtime: nodejs20.x
    architecture: x86_64
    events:
      - httpApi:
          method: PUT
          path: /note
  GetNote:
    handler: getNote.handler
    runtime: nodejs20.x
    architecture: x86_64
    events:
      - httpApi:
          method: GET
          path: /note
  DeleteNote:
    handler: deleteNote.handler
    runtime: nodejs20.x
    architecture: x86_64
    events:
      - httpApi:
          method: DELETE
          path: /note
